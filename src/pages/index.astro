---
import data from "../data.json";

import CountryItem from "../components/CountryItem.astro";
import BaseLayout from "../layouts/BaseLayout.astro";
import { normalize } from "../scripts/utils";
const title = "Where in the world?";

const { url } = Astro.request;
const requestURL = new URL(url);
const params = new URLSearchParams(requestURL.search);
const query = params.get("query");
const searchFilter = params.get("search-filter");

let countries = data;

if (query) {
  countries = countries.filter((country) =>
    normalize(country.name).includes(query.toLowerCase()),
  );
}

if (searchFilter) {
  countries = countries.filter(
    (country) => country.region.toLowerCase() === searchFilter,
  );
}
---

<BaseLayout {title}>
  <header class="filters-wrapper">
    <form class="filters-form" role="search">
      <div class="search">
        <button title="Click to search for a country" class="filters-submit">
          <i class="fa-solid fa-magnifying-glass"></i>
        </button>
        <label for="search-input" class="sr-only"
          >Search for a country by name</label
        >
        <input
          type="search"
          placeholder="Search for a country..."
          name="query"
          id="search-input"
          class="search-input"
          title="search for a country by name"
        />
      </div>

      <select
        name="search-filter"
        class="search-filter"
        aria-label="search for a country by region"
      >
        <option value="" selected disabled>Filter by region</option>
        <option value="africa">Africa</option>
        <option value="america">America</option>
        <option value="asia">Asia</option>
        <option value="europe">Europe</option>
        <option value="oceania">Oceania</option>
      </select>
    </form>
  </header>

  <ul class="country-list">
    {
      countries.length ? (
        countries.map((country) => <CountryItem country={country} />)
      ) : (
        <li>Sorry, we cannot find a country named "{query}".</li>
      )
    }
  </ul>
</BaseLayout>

<style>
  .filters-form {
    display: flex;
    flex-direction: column;
    margin-block-end: 2rem;
  }

  .filters-form > * {
    flex-grow: 1;
    border-radius: 0.5rem;
    background-color: var(--element);
    box-shadow:
      0 1px 5px var(--shadow),
      2px 4px 8px var(--shadow);
  }

  @media screen and (min-width: 45em) {
    .filters-form {
      flex-direction: row;
      justify-content: space-between;
    }

    .filters-form > * {
      flex-grow: 0;
    }
  }

  .filters-form .search {
    padding: 1rem;
    display: flex;
    gap: 1rem;
  }

  .filters-form .search > * {
    padding: 0.25rem 0.5rem;
  }

  .sr-only {
    position: absolute;
    left: -10000px;
    top: auto;
    width: 1px;
    height: 1px;
    overflow: hidden;
  }

  .search-input {
    flex: 1;
  }

  .search-filter {
    padding: 1rem 2rem 1rem 1rem;
    background-image: linear-gradient(45deg, transparent 50%, var(--text) 50%),
      linear-gradient(135deg, var(--text) 50%, transparent 50%),
      linear-gradient(to right, transparent, transparent);
    background-position:
      calc(100% - 20px) calc(2rem - 2px),
      calc(100% - 15px) calc(2rem - 2px),
      100% 0;
    background-size:
      5px 5px,
      5px 5px,
      2.5em 2.5em;
    background-repeat: no-repeat;
  }

  .country-list {
    list-style: none;
    margin: 0;
    padding: 0;
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(35ch, 1fr));
    gap: 3rem;
  }
</style>
